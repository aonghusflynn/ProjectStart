var search_data = {"index":{"longSearchIndex":["optionstest","startproject","startproject::downloader","startproject::options","startproject::runner","startproject::downloader::download()","startproject::options::new()","startproject::runner::new()","startproject::runner#run()","startproject::downloader::unzip_file()",""],"info":[["OptionsTest","","OptionsTest.html","",""],["StartProject","","StartProject.html","","<p>This module encapsulates all the functionality in the module It has 3\nclasses\n<p>Options\n<p>Downloader\n"],["StartProject::Downloader","","StartProject/Downloader.html","","<p>Manages the downloading and unzipping the file\n"],["StartProject::Options","","StartProject/Options.html","","<p>Read the arguments from the command line and parse them out\n"],["StartProject::Runner","","StartProject/Runner.html","",""],["download","StartProject::Downloader","StartProject/Downloader.html#method-c-download","(source)","<p>Downloads the relevant zip and stores it in a file called temp.zip\n"],["new","StartProject::Options","StartProject/Options.html#method-c-new","(argv)","<p>Initializes the options object, loads the config.yaml that stores all the\nframeworks available  and sets …\n"],["new","StartProject::Runner","StartProject/Runner.html#method-c-new","(argv)",""],["run","StartProject::Runner","StartProject/Runner.html#method-i-run","()",""],["unzip_file","StartProject::Downloader","StartProject/Downloader.html#method-c-unzip_file","(destination)","<p>Unzip the file into a directory specified in the intitial call to the app\nvia the -n (–name option) …\n"],["README","","README.html","","<p>The start_project gem is a simple way of downloading the latest version of\nyour favourite framework. …\n"]],"searchIndex":["optionstest","startproject","downloader","options","runner","download()","new()","new()","run()","unzip_file()","readme"]}}